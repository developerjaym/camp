{
	"info": {
		"_postman_id": "4dc85a7d-8049-462a-bf44-c33cc0298a54",
		"name": "Camping",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "All Activities",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Expected length\", function() {",
							"    let jsonData = pm.response.json();",
							"    pm.expect(jsonData.length).to.be.greaterThan(0);",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/activities",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"activities"
					]
				}
			},
			"response": []
		},
		{
			"name": "Camper (Valid)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"// var schema = {",
							"//     \"type\": \"object\",",
							"//     \"required\": [",
							"//         \"id\", \"name\", \"age\"",
							"//     ],",
							"//     \"properties\": {",
							"//       \"id\": {\"type\": \"number\"},",
							"//       \"name\": {\"type\": \"string\"},",
							"//       \"age\": {\"type\": \"number\"},",
							"//     }",
							"// };",
							"",
							"// pm.test('Response schema verification', function() {",
							"//   pm.expect(tv4.validate(pm.response.json(), JSON.parse(schema), false, true), tv4.error).to.be.true;",
							"// });"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Jay\",\n    \"age\": 17\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/campers",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"campers"
					]
				}
			},
			"response": []
		},
		{
			"name": "Camper (Invalid)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Expected response\", function() {",
							"    let jsonData = pm.response.json();",
							"    pm.expect(jsonData.errors.length).to.eql(1);",
							"    pm.expect(jsonData.errors[0]).to.eql(\"validation errors\"); ",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Jay\",\n    \"age\": 32\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/campers",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"campers"
					]
				}
			},
			"response": []
		},
		{
			"name": "Signup Camper 1 to Activity 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"time\": 9,\n  \"camper_id\": 1,\n  \"activity_id\": 3\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/signups",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"signups"
					]
				}
			},
			"response": []
		},
		{
			"name": "Signup Camper 1 to Activity 4 (Invalid)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Expected response\", function() {",
							"    let jsonData = pm.response.json();",
							"    pm.expect(jsonData.errors.length).to.eql(1);",
							"    pm.expect(jsonData.errors[0]).to.eql(\"validation errors\"); ",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"time\": 9,\n  \"camper_id\": 1,\n  \"activity_id\": 4\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/signups",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"signups"
					]
				}
			},
			"response": []
		},
		{
			"name": "Activity By Id 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/activities/3",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"activities",
						"3"
					]
				}
			},
			"response": []
		},
		{
			"name": "All Campers",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/campers",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"campers"
					]
				}
			},
			"response": []
		},
		{
			"name": "Camper By Id 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Expected response\", function() {",
							"    let jsonData = pm.response.json();",
							"    pm.expect(jsonData.activities.length).to.eql(1); ",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/campers/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"campers",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Camper By Id 4 (Not Found)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Expected length\", function() {",
							"    let jsonData = pm.response.json();",
							"    pm.expect(jsonData.error).to.eql(\"Camper not found\"); ",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/campers/4",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"campers",
						"4"
					]
				}
			},
			"response": []
		},
		{
			"name": "Activity By Id 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/activities/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"activities",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Activity By Id 4 (Not Found)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Expected response\", function() {",
							"    let jsonData = pm.response.json();",
							"    pm.expect(jsonData.error).to.eql(\"Activity not found\"); ",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/activities/4",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"activities",
						"4"
					]
				}
			},
			"response": []
		}
	]
}